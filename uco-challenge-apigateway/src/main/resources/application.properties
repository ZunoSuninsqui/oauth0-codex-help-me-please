# ============================================================
# üß© CONFIGURACI√ìN GENERAL DEL GATEWAY
# ============================================================
server.port=3000
spring.application.name=uco-challenge-apigateway

# ============================================================
# üåê RUTAS DEL GATEWAY (EJEMPLO USERS-SERVICE)
# ============================================================
spring.cloud.gateway.routes[0].id=users-service
spring.cloud.gateway.routes[0].uri=http://localhost:8083
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**
# Quita el prefijo /users antes de enviar la request al backend
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# ============================================================
# üîí AUTH0 / RESOURCE SERVER
# ============================================================
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-x2nlunlga02cbz17.us.auth0.com/
auth0.audience=https://spring-boot-auth0-integration
# Lista de roles permitidos (separados por coma). Dejar vac√≠o para aceptar cualquier rol del token.
auth0.allowed-roles=
# Claim donde Auth0 expone los roles. Dejar vac√≠o para detecci√≥n autom√°tica.
auth0.roles-claim=

# ============================================================
# üåç CORS CONFIG (para tu SecurityConfig y global gateway)
# ============================================================
# Lista de or√≠genes permitidos para el frontend (separados por coma)
web.cors.allowed-origins=http://localhost:5173,http://localhost:3001,http://localhost:4200

# --- CORS GLOBAL PARA SPRING CLOUD GATEWAY ---
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:5173,http://localhost:3000,http://localhost:4200
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PATCH,PUT,DELETE,OPTIONS,HEAD
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=Authorization,Content-Type,X-Requested-With,Accept,Origin
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders=Authorization,X-Get-Header
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true

# ============================================================
# ‚öôÔ∏è ACTUATOR (opcional para health checks)
# ============================================================
management.endpoints.web.exposure.include=health,info

# ============================================================
# üßæ LOGGING (√∫til mientras depuras seguridad / CORS)
# ============================================================
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=INFO
logging.level.org.springframework.web.cors=DEBUG
